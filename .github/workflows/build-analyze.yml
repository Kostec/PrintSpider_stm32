name: Build and PVS-Studio analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-analyze:
    if: |
      github.actor != 'github-actions[bot]' &&
      (
        github.event_name != 'pull_request' ||
        github.event.pull_request.head.repo.full_name == github.repository
      )
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore ARM toolchain cache
        id: cache-toolchain
        uses: actions/cache@v4
        with:
          path: toolchain
          key: ${{ runner.os }}-arm-toolchain-v14
          restore-keys: |
            ${{ runner.os }}-arm-toolchain-

      - name: Download and extract ARM toolchain
        if: steps.cache-toolchain.outputs.cache-hit != 'true'
        run: |
          curl -L https://developer.arm.com/-/media/Files/downloads/gnu/14.3.rel1/binrel/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi.tar.xz \
            -o toolchain.tar.xz
          mkdir -p toolchain
          tar -xf toolchain.tar.xz -C toolchain

      - name: Add ARM toolchain to PATH
        run: echo "${{ github.workspace }}/toolchain/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_PATH

      - name: Verify toolchain
        run: arm-none-eabi-gcc --version

      - name: Install PVS-Studio dependencies
        run: |
          wget -q -O - https://files.pvs-studio.com/etc/pubkey.txt \
            | sudo apt-key add -
          sudo wget -q -O /etc/apt/sources.list.d/viva64.list \
            https://files.pvs-studio.com/etc/viva64.list
          sudo apt update
          sudo apt install -y pvs-studio build-essential cmake
          echo "Setup credentials"
          pvs-studio-analyzer credentials USER_NAME Kostec_PrintSpider_stm32 LICENSE_KEY "${{ secrets.PVS_STUDIO_CREDENTIALS }}"
          echo "Check credentials"
          pvs-studio-analyzer lic-info

      - name: Configure CMake (Firmware)
        run: cmake --preset PrintSpider_stm32

      - name: Build Firmware under PVS-Studio
        run: pvs-studio-analyzer trace -- cmake --build --preset build-fw

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ github.sha }}
          path: |
            build/*.bin
            build/*.hex
            build/*.elf

      - name: Analyze with PVS-Studio
        run: pvs-studio-analyzer analyze -j$(nproc) -o PVS.json

      - name: Convert report to SARIF
        if: always()
        run: plog-converter PVS.json -t sarif -o pvs-report.sarif

      - name: Publish SARIF report
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: build/pvs-report.sarif
          category: PVS-Studio

      - name: Commit PVS-Studio cache
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: 